[
    {
        "name": "autoIt",
        "keywords": [
            {
                "type": "ACTION",
                "name": "reg delete key",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "control focus",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "win activate",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "win get state",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "control get text",
                "arguments": []
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "run wait",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get auto it version",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "control get pos width",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "win minimize all",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "control command",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "win set trans",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "win active",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "control move",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "win get process",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "control disable",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "reg enum val",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "block input",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "win get caret pos x",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "win get pos height",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "win menu select item",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "send",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "mouse wheel",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "control tree view",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "mouse click down",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "mouse get pos y",
                "arguments": []
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "process wait close",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "win minimize all undo",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "win set on top",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "cd tray",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "mouse click",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "shut down",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "drive map get",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "control get focus",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "control show",
                "arguments": []
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "win wait",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "win get pos y",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "drive map del",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "init",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "win get client size height",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "pixel checksum",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "win get client size width",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "win get handle",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "clip put",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "reg write",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "win list",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "reg read",
                "arguments": []
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "win wait close",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "control set text",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "run as set",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "mouse click drag",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "control get pos x",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "mouse get pos x",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "control get pos y",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "is admin",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "auto it set option",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "tool tip",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "statusbar get text",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "process close",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "control click",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "control get pos height",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "process exits",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get version",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "control hide",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "win get caret pos y",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "win close",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get screen image",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "control get handle",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "control enable",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "ini delete",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "win get class list",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "reg enum key",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get active window image",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "mouse get cursor",
                "arguments": []
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait for active window",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "win get text",
                "arguments": []
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "process wait",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "control send",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "drive map add",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "opt",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "clip get",
                "arguments": []
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "win wait not active",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "win move",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "process set priority",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "win get title",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "win get pos width",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "win kill",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "pixel get color",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "control list view",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "reg delete val",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "ini write",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "win exists",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "pixel search",
                "arguments": []
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "win wait active",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "win get pos x",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "win set state",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "ini read",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "win set title",
                "arguments": []
            }
        ]
    },
    {
        "name": "Process",
        "keywords": [
            {
                "type": "ACTION",
                "name": "send signal to process",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "terminate all processes",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "switch process",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "process should be stopped",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "process should be running",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "join command line",
                "arguments": []
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait for process",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get process result",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "start process",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "run process",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get process id",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "split command line",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "terminate process",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "is process running",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get process object",
                "arguments": []
            }
        ]
    },
    {
        "name": "String",
        "keywords": [
            {
                "type": "GET",
                "name": "get line count",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get lines matching pattern",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "replace string using regexp",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get lines matching regexp",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "fetch from right",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "split string from right",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "convert to lowercase",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "should be uppercase",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "split to lines",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "should be titlecase",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "split string",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "convert to uppercase",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "generate random string",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "split string to characters",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "should not be string",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get substring",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "remove string",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get lines containing string",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "should be string",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "remove string using regexp",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "encode string to bytes",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get regexp matches",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get line",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "should be byte string",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "decode bytes to string",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "fetch from left",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "replace string",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "should be lowercase",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "strip string",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "should be unicode string",
                "arguments": []
            }
        ]
    },
    {
        "name": "sikuli",
        "keywords": [
            {
                "type": "GET",
                "name": "get match score",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "paste text",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "add image path",
                "arguments": []
            },
            {
                "type": "LOG",
                "name": "capture screen",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "right click in",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "clear highlight",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "start sikuli process",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "highlight",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "screen should not contain",
                "arguments": []
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait for multiple images",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "double click",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "set capture folder",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "wheel up",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "double click in",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "screen should contain",
                "arguments": []
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait until screen not contain",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get current screen id",
                "arguments": []
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait until screen contain",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "set ocr text read",
                "arguments": []
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait for image",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "stop remote server",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "change screen id",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "set min similarity",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "press special key",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "click",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "clear all highlights",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "exists",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "mouse down",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "right click",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get extended region from",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "mouse move",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "read text from region",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "wheel down",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "click in",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "remove image path",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "type with modifiers",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "set capture matched image",
                "arguments": []
            }
        ]
    },
    {
        "name": "requests",
        "keywords": [
            {
                "type": "ACTION",
                "name": "post",
                "arguments": []
            },
            {
                "type": "UNKNOWN",
                "name": "options",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "create ntlm session",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "create digest session",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "create session",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "put",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "delete",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "get request",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "put request",
                "arguments": []
            },
            {
                "type": "UNKNOWN",
                "name": "options request",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "delete request",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "patch",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "delete all sessions",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "patch request",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "head",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "post request",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "to json",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "head request",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "get",
                "arguments": []
            }
        ]
    },
    {
        "name": "Screenshot",
        "keywords": [
            {
                "type": "LOG",
                "name": "take screenshot without embedding",
                "arguments": []
            },
            {
                "type": "LOG",
                "name": "take screenshot",
                "arguments": []
            }
        ]
    },
    {
        "name": "Dialogs",
        "keywords": [
            {
                "type": "GET",
                "name": "get selection from user",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get value from user",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "execute manual step",
                "arguments": []
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "pause execution",
                "arguments": []
            }
        ]
    },
    {
        "name": "swing",
        "keywords": [
            {
                "type": "ASSERTION",
                "name": "dialog should not be open",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get slider value",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get table values",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "close window",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "tree node should be visible",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select from table cell popup menu on selected cells",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get menu items from popup menu",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "click table header",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "component should be visible",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get list item count",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "radio button should be enabled",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select from tree node popup menu in separate thread",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "list windows",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get table headers",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get tree node child names",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select tab pane",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "internal frame should exist",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get button text",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "find table row",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select table cell area",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "type into text field",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "scroll component to view",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "spinner should exist",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "expand tree node",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select tab",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select from table cell popup menu",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "expand all tree nodes",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "list components in context",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "table cell should not be selected",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "check box should be unchecked",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "button should be disabled",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get text field value",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "text field should be disabled",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get combobox values",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get selected table cell value",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "push radio button",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select window",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get table row values",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "radio button should be selected",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "component should exist",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "increase spinner value",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get tooltip text",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "tree node should not be leaf",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get selected item from combo box",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "click on component",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "decrease spinner value",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "tree node should be leaf",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "tree node should not be visible",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "combo box should be disabled",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "close dialog",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "collapse all tree nodes",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "menu item should not be checked",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select tree node",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "check all checkboxes",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "tree node popup menu item should be enabled",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "check box should be checked",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "unselect tree node",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "all checkboxes should be checked",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get selected value from list",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "button should be enabled",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select dialog",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "send keyboard event",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get table row count",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "collapse tree node",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get selected tab label",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "internal frame should be open",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "spinner should not exist",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "start application in separate thread",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "minimize internal frame",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "check check box",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "menu item should not exist",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get label content",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get tree node index",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "menu item should not be enabled",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select from menu",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "table cell should be selected",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "label should not exist",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "main menu item should not be checked",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "tree node should be selected",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "set jemmy timeout",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "menu item should exist",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "choose from file chooser",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select main window",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select context",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "list should contain",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "set table cell value",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get selected item from dropdown menu",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "start application",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "maximize internal frame",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "all checkboxes should be unchecked",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select from menu and wait",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "launch application",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "internal frame should not exist",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get main menu item name",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get table cell value",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "click hyper link",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "table cell popup menu should be enabled",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "tree node popup menu item should be disabled",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "type into table cell",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "toggle button should not be selected",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select from dropdown menu",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "label should exist",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "set jemmy dispatch model",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "list should not contain",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get menu item names",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "component should not exist",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "push button",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "set spinner string value",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "close internal frame",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "clear table selection",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get list values",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "check box should be disabled",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "de iconify internal frame",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select table cell",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "slider should not exist",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "cancel file chooser",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "main menu item should exist",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "clear tree selection",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "table cell should be editable",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "click on table cell",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "clear table cell",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "menu item should be disabled",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get spinner value",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "insert into text field",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "close all dialogs",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "component should not be visible",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get table column count",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "table cell should not be editable",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "tree node should not exist",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "focus to component",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select from popup menu",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "identify internal frame",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select from combo box",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "tree node should exist",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select from tree node popup menu",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select radio button",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "check box should not be checked",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get table cell property",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "set system property",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select from popup menu on selected tree nodes",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "button should exist",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "uncheck check box",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get tree node count",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select tab as context",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select all list items",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get table column values",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "click on list item",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "check box should be enabled",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "main menu item should be checked",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "radio button should be disabled",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "click on tree node",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "right click on component",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "set spinner number value",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get internal frames in context",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "tree node should be expanded",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select from main menu and wait",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "type into combobox",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "select from main menu",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "menu item should be enabled",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "table cell popup menu should be disabled",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "set slider value",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get selected window title",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "combo box should be enabled",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get current context",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "push toggle button",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "tree node should not be selected",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get main menu item names",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "clear text field",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get tree node label",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "tree node should be collapsed",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "clear selection from list",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "main menu item should not exist",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "menu item should be checked",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "set jemmy timeouts",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "internal frame should not be open",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "dialog should be open",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "button should not exist",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "run keyword in separate thread",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "toggle button should be selected",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "text field should be enabled",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "add table cell selection",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "slider should exist",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "uncheck all checkboxes",
                "arguments": []
            }
        ]
    },
    {
        "name": "DateTime",
        "keywords": [
            {
                "type": "SET",
                "name": "subtract time from date",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "subtract time from time",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "add time to date",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "add time to time",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "convert date",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get current date",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "subtract date from date",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "convert time",
                "arguments": []
            }
        ]
    },
    {
        "name": "database",
        "keywords": [
            {
                "type": "ACTION",
                "name": "connect to database using custom params",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "query",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "table must exist",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "execute sql string",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "row count is 0",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "row count is less than x",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "delete all rows from table",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "execute sql script",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "disconnect from database",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "description",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "row count is equal to x",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "check if exists in database",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "row count",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "row count is greater than x",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "check if not exists in database",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "connect to database",
                "arguments": []
            }
        ]
    },
    {
        "name": "Selenium2Library",
        "keywords": [
            {
                "type": "ACTION",
                "name": "click image",
                "arguments": [
                    {"name":  "locator", "type":  "Locator"},
                    {"name":  "modifier", "type":  "Boolean", "default":  "False"}
                ]
            },
            {
                "type": "ACTION",
                "name": "unselect from list by index",
                "arguments": [
                    {"name":  "locator", "type":  "Locator"},
                    {"name":  "indexes", "type":  "List"}
                ]
            },
            {
                "type": "GET",
                "name": "get alert message",
                "arguments": [
                    {"name": "dismiss", "type": "Boolean", "default":  "True"}
                ]
            },
            {
                "type": "GET",
                "name": "get cookie",
                "arguments": [
                    {"name": "name", "type": "String"}
                ]
            },
            {
                "type": "ACTION",
                "name": "select checkbox",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait until element contains",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "text", "type": "String"},
                    {"name": "timeout", "type": "Timeout", "default": "None"},
                    {"name": "error", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "table should contain",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "expected", "type": "String"},
                    {"name": "message", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "GET",
                "name": "get list items",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "values", "type": "Boolean", "default": "False"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "element should be focused",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "UNKNOWN",
                "name": "get selenium timeout",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "unselect frame",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "create webdriver",
                "arguments": [
                    {"name": "driver_name", "type": "String"},
                    {"name": "alias", "type": "String", "default": "None"},
                    {"name": "init_kwargs", "type": "Dictionary"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "textarea value should be",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "expected", "type": "String"},
                    {"name": "message", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "ACTION",
                "name": "choose cancel on next confirmation",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "page should contain image",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "ACTION",
                "name": "press key",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "key", "type": "String"}
                ]
            },
            {
                "type": "GET",
                "name": "get window size",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "table header should contain",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "ACTION",
                "name": "unselect check box",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait until element is visible",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "timeout", "type": "Timeout", "default": "None"},
                    {"name": "error", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "alert should be present",
                "arguments": [
                    {"name": "text", "type": "String", "default": ""},
                    {"name": "action", "type": "String", "default": "ACCEPT"},
                    {"name": "timeout", "type": "Timeout", "default": "None"}
                ]
            },
            {
                "type": "ACTION",
                "name": "switch browser",
                "arguments": [
                    {"name": "index_or_alias", "type": "String"}
                ]
            },
            {
                "type": "ACTION",
                "name": "set window size",
                "arguments": [
                    {"name": "width", "type": "Number"},
                    {"name": "height", "type": "Number"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "current frame contains",
                "arguments": [
                    {"name": "expected", "type": "String"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "GET",
                "name": "get table cell",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "row", "type": "Number"},
                    {"name": "column", "type": "Number"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "ACTION",
                "name": "dismiss alert",
                "arguments": [
                    {"name": "accept", "type": "Boolean", "default": "True"}
                ]
            },
            {
                "type": "ACTION",
                "name": "input text into alert",
                "arguments": [
                    {"name": "text", "type": "String"},
                    {"name": "action", "type": "String", "default": "ACCEPT"},
                    {"name": "timeout", "type": "Timeout", "default": "None"}
                ]
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait until element does not contain",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "timeout", "type": "Timeout", "default": "None"},
                    {"name": "error", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "ACTION",
                "name": "select frame",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ACTION",
                "name": "click button",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "element should not contain",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name":  "expected", "type": "String"},
                    {"name": "message", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "ACTION",
                "name": "mouse down on link",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "GET",
                "name": "get element attribute",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "attribute", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "ACTION",
                "name": "submit form",
                "arguments": [
                    {"name": "locator", "type": "Locator", "default": "None"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "table row should contain",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "row", "type": "Number"},
                    {"name": "expected", "type": "String"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "page should contain list",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "ACTION",
                "name": "go back",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get cookie value",
                "arguments": [
                    {"name": "name", "type": "String"}
                ]
            },
            {
                "type": "ACTION",
                "name": "unselect all from list",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait until page does not contain element",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name":  "timeout", "type": "Timeout", "default": "None"},
                    {"name": "error", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "GET",
                "name": "get location",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "textfield should contain",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "expected", "type": "String"},
                    {"name": "message", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "ACTION",
                "name": "set focus to element",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait until element is enabled",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name":  "timeout", "type": "Timeout", "default": "None"},
                    {"name": "error", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "textarea should contain",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "expected", "type": "String"},
                    {"name": "message", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "set browser implicit wait",
                "arguments": [
                    {"name":  "value", "type": "Timeout"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "page should not contain",
                "arguments": [
                    {"name": "text", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "ACTION",
                "name": "delete cookie",
                "arguments": [
                    {"name": "name", "type": "String"}
                ]
            },
            {
                "type": "RUN",
                "name": "register keyword to run on failure",
                "arguments": [
                    {"name": "keyword", "type": "Keyword"}
                ]
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait until page contains",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name":  "timeout", "type": "Timeout", "default": "None"},
                    {"name": "error", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "current frame should not contain",
                "arguments": [
                    {"name": "text", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "frame should contain",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "text", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "CONFIGURATION",
                "name": "set selenium timeout",
                "arguments": [
                    {"name":  "value", "type": "Timeout"}
                ]
            },
            {
                "type": "ACTION",
                "name": "set window position",
                "arguments": [
                    {"name": "x", "type": "Number"},
                    {"name": "y", "type": "Number"}
                ]
            },
            {
                "type": "ACTION",
                "name": "unselect from list",
                "arguments": [
                    {"name":  "locator", "type":  "Locator"},
                    {"name":  "items", "type":  "List"}
                ]
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait for condition",
                "arguments": [
                    {"name": "condition", "type": "Condition"},
                    {"name":  "timeout", "type": "Timeout", "default": "None"},
                    {"name": "error", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "ACTION",
                "name": "go to",
                "arguments": [
                    {"name": "url", "type": "String"}
                ]
            },
            {
                "type": "ACTION",
                "name": "close browser",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "alert should not be present",
                "arguments": [
                    {"name": "action", "type": "String", "default": "ACCEPT"},
                    {"name":  "timeout", "type": "Timeout", "default": "None"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "checkbox should be selected",
                "arguments": [
                    {"name":  "locator", "type":  "Locator"}
                ]
            },
            {
                "type": "CONFIGURATION",
                "name": "set selenium timeout",
                "arguments": [
                    {"name":  "value", "type": "Timeout"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "element should contain",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "expected", "type": "String"},
                    {"name": "message", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "list selection should be",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "expected", "type": "List"}
                ]
            },
            {
                "type": "ACTION",
                "name": "maximize browser window",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "location should contain",
                "arguments": [
                    {"name": "expected", "type": "String"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "page should not contain element",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "GET",
                "name": "get all links",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get horizontal position",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ACTION",
                "name": "confirm action",
                "arguments": []
            },
            {
                "type": "LOG",
                "name": "log location",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get webelements",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "radio button should be set to",
                "arguments": [
                    {"name": "group_name", "type": "String"},
                    {"name": "name", "type": "String"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "checkbox should not be selected",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "GET",
                "name": "get text",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ACTION",
                "name": "mouse up",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "GET",
                "name": "get value",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "UNKNOWN",
                "name": "remove location strategy",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "element should be enabled",
                "arguments": [
                    {"name": "strategy_name", "type": "String"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "page should not contain textfield",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "ACTION",
                "name": "mouse over",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ACTION",
                "name": "mouse out",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "GET",
                "name": "get window titles",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "page should not contain link",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "ACTION",
                "name": "click link",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "page should contain textfield",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "GET",
                "name": "get window identifiers",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "page should contain checkbox",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "current frame should contain",
                "arguments": [
                    {"name": "text", "type": "String"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "page should not contain radio button",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "ACTION",
                "name": "execute javascript",
                "arguments": [
                    {"name": "code", "type": "List"}
                ]
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait until page does not contain",
                "arguments": [
                    {"name": "text", "type": "String"},
                    {"name": "timeout", "type": "Timeout","default": "None"},
                    {"name": "error", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "table footer should contain",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "expected", "type": "String"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "radio button should not be selected",
                "arguments": [
                    {"name": "group_name", "type": "String"}
                ]
            },
            {
                "type": "GET",
                "name": "get element size",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ACTION",
                "name": "add cookie",
                "arguments": [
                    {"name": "name", "type": "String"},
                    {"name": "value", "type": "String"},
                    {"name": "path", "type": "String", "default": "None"},
                    {"name": "domain", "type": "String", "default": "None"},
                    {"name": "secure", "type": "String", "default": "None"},
                    {"name": "expiry", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "ACTION",
                "name": "focus",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ACTION",
                "name": "select from list by index",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "indexes", "type": "List"}
                ]
            },
            {
                "type": "GET",
                "name": "get selected list values",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ACTION",
                "name": "input password",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "password", "type": "String"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "page should contain",
                "arguments": [
                    {"name": "expected", "type": "String"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "ACTION",
                "name": "unselect from list by label",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "labels", "type": "List"}
                ]
            },
            {
                "type": "ACTION",
                "name": "input text",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "text", "type": "String"}
                ]
            },
            {
                "type": "ACTION",
                "name": "choose ok on next confirmation",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get window handles",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "list should have no selections",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "page should contain radio button",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "ACTION",
                "name": "simulate event",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "event", "type": "String"}
                ]
            },
            {
                "type": "LOG",
                "name": "capture page screenshot",
                "arguments": [
                    {"name": "filename", "type": "String", "default": "selenium-screenshot-{index}.png"}
                ]
            },
            {
                "type": "ACTION",
                "name": "input text into prompt",
                "arguments": [
                    {"name": "text", "type": "String"}
                ]
            },
            {
                "type": "ACTION",
                "name": "select all from list",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ACTION",
                "name": "open context menu",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait until element is not visible",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "timeout", "type": "Timeout","default": "None"},
                    {"name": "error", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "ACTION",
                "name": "mouse down on image",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "GET",
                "name": "get source",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get matching xpath count",
                "arguments": [
                    {"name": "xpath", "type": "String"},
                    {"name": "return_str", "type": "Boolean", "default": "True"}
                ]
            },
            {
                "type": "ACTION",
                "name": "drag and drop by offset",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "xoffset", "type": "Number"},
                    {"name": "yoffset", "type": "Number"}
                ]
            },
            {
                "type": "ACTION",
                "name": "clear element text",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "CONFIGURATION",
                "name": "set selenium implicit wait",
                "arguments": [
                    {"name": "value", "type": "Timeout"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "table cell should contain",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "row", "type": "Number"},
                    {"name": "column", "type": "Number"},
                    {"name": "expected", "type": "String"},
                    {"name": "loglevel", "type": "LogLevel", "default": "INFO"}
                ]
            },
            {
                "type": "ACTION",
                "name": "select from list",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "items", "type": "List"}
                ]
            },
            {
                "type": "ACTION",
                "name": "handle alert",
                "arguments": [
                    {"name": "action", "type": "String", "default": "ACCEPT"},
                    {"name": "timeout", "type": "Timeout","default": "None"}
                ]
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait until page contains element",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "timeout", "type": "Timeout","default": "None"},
                    {"name": "error", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "CONFIGURATION",
                "name": "set screenshot directory",
                "arguments": [
                    {"name": "path", "type": "String"},
                    {"name": "persist", "type": "String", "default": "DEPRECATED"}
                ]
            },
            {
                "type": "GET",
                "name": "get selected list label",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ACTION",
                "name": "unselect from list by value",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "values", "type": "List"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "page should not contain checkbox",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel","default": "TRACE"}
                ]
            },
            {
                "type": "ACTION",
                "name": "select from list by value",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "values", "type": "List"}
                ]
            },
            {
                "type": "GET",
                "name": "get webelement",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ACTION",
                "name": "click element",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ACTION",
                "name": "click element at coordinates",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "xoffset", "type": "Number"},
                    {"name": "yoffset", "type": "Number"}
                ]
            },
            {
                "type": "LOG",
                "name": "log title",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "reload page",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "choose file",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "file_path", "type": "String"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "title should be",
                "arguments": [
                    {"name": "expected", "type": "String"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "page should contain link",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel","default": "TRACE"}
                ]
            },
            {
                "type": "ACTION",
                "name": "assign id to element",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "id", "type": "String"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "element should not be visible",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "UNKNOWN",
                "name": "get selenium speed",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "table column should contain",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "column", "type": "Number"},
                    {"name": "expected", "type": "String"},
                    {"name": "loglevel", "type": "LogLevel","default": "INFO"}
                ]
            },
            {
                "type": "GET",
                "name": "get window position",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "page should contain element",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel","default": "INFO"},
                    {"name": "limit", "type": "Number", "default": "None"}
                ]
            },
            {
                "type": "GET",
                "name": "get window names",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "delete all cookies",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "element should be visible",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "textfield value should be",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "expected", "type": "String"},
                    {"name": "message", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "LOG",
                "name": "log source",
                "arguments": [
                    {"name": "loglevel", "type": "LogLevel","default": "INFO"}
                ]
            },
            {
                "type": "ACTION",
                "name": "close all browsers",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get title",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "double click element",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "CONFIGURATION",
                "name": "set selenium speed",
                "arguments": [
                    {"name": "value", "type": "Timeout"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "location should be",
                "arguments": [
                    {"name": "index_or_alias", "type": "String"}
                ]
            },
            {
                "type": "ACTION",
                "name": "select from list by label",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "labels", "type": "List"}
                ]
            },
            {
                "type": "GET",
                "name": "get vertical position",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "GET",
                "name": "get locations",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "add location strategy",
                "arguments": [
                    {"name": "strategy_name", "type": "String"},
                    {"name": "strategy_keyword", "type": "String"},
                    {"name": "persist", "type": "Boolean", "default": "False"}
                ]
            },
            {
                "type": "ACTION",
                "name": "drag and drop",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "target", "type": "Locator"}
                ]
            },
            {
                "type": "GET",
                "name": "get selected list value",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "GET",
                "name": "get cookies",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "open browser",
                "arguments": [
                    {"name": "url", "type": "String"},
                    {"name": "browser", "type": "String", "default": "firefox"},
                    {"name": "alias", "type": "String", "default": "None"},
                    {"name": "remote_url", "type": "String", "default": "False"},
                    {"name": "desired_capabilities", "type": "String", "default": "None"},
                    {"name": "ff_profile_dir", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "GET",
                "name": "get selected list labels",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ACTION",
                "name": "execute async javascript",
                "arguments": [
                    {"name": "code", "type": "List"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "element should be disabled",
                "arguments": [
                    {"name": "locator", "type": "Locator"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "element text should be",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "expected", "type": "String"},
                    {"name": "message", "type": "String", "default": "None"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "page should contain button",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel", "default": "Info"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "page should not contain image",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel", "default": "Info"}
                ]
            },
            {
                "type": "ASSERTION",
                "name": "page should not contain button",
                "arguments": [
                    {"name": "locator", "type": "Locator"},
                    {"name": "message", "type": "String", "default": "None"},
                    {"name": "loglevel", "type": "LogLevel", "default": "Info"}
                ]
            }
        ]
    },
    {
        "name": "Collections",
        "keywords": [
            {
                "type": "ASSERTION",
                "name": "dictionary should contain item",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "remove duplicates",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "should contain match",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get dictionary items",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "list should contain sub list",
                "arguments": []
            },
            {
                "type": "LOG",
                "name": "log dictionary",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get match count",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "should not contain match",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "remove from list",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "sort list",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get index from list",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "dictionary should not contain key",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get from dictionary",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "lists should be equal",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "insert into list",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "dictionary should contain value",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "convert to dictionary",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "remove values from list",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "count values in list",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get slice from list",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get matches",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "pop from dictionary",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get dictionary keys",
                "arguments": []
            },
            {
                "type": "LOG",
                "name": "log list",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "list should contain value",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "keep in dictionary",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "list should not contain duplicates",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get from list",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "reverse list",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "copy list",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "remove from dictionary",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "set to dictionary",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get dictionary values",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "dictionary should not contain value",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "dictionaries should be equal",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "set list value",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "append to list",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "list should not contain value",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "dictionary should contain key",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "convert to list",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "copy dictionary",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "dictionary should contain sub dictionary",
                "arguments": []
            }
        ]
    },
    {
        "name": "XML",
        "keywords": [
            {
                "type": "GET",
                "name": "get element text",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "evaluate xpath",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "remove element attribute",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "element to string",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get element attributes",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "copy element",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "element should not have attribute",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "set elements text",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "remove elements",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get element count",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "remove elements attribute",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "remove element",
                "arguments": []
            },
            {
                "type": "LOG",
                "name": "log element",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "clear element",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get elements texts",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "set element attribute",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "element text should match",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "elements should match",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "add element",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "element should exist",
                "arguments": []
            },
            {
                "type": "UNKNOWN",
                "name": "save xml",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get element",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "parse xml",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "element should not exist",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "element attribute should match",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get child elements",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "set elements attribute",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "set element tag",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "element attribute should be",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get elements",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "remove element attributes",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "set element text",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "elements should be equal",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "remove elements attributes",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "set elements tag",
                "arguments": []
            }
        ]
    },
    {
        "name": "Telnet",
        "keywords": [
            {
                "type": "CONFIGURATION",
                "name": "set encoding",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "write",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "login",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "set prompt",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "open connection",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "close connection",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "close all connections",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "read until",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "write until expected output",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "read until regexp",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "switch connection",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "set timeout",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "read until prompt",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "set newline",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "read",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "execute command",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "set default log level",
                "arguments": []
            },
            {
                "type": "CONFIGURATION",
                "name": "set telnetlib log level",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "write bare",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "write control character",
                "arguments": []
            }
        ]
    },
    {
        "name": "OperatingSystem",
        "keywords": [
            {
                "type": "SYNCHRONIZATION",
                "name": "wait until created",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "set environment variable",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "run and return rc",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get environment variables",
                "arguments": []
            },
            {
                "type": "SYNCHRONIZATION",
                "name": "wait until removed",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "remove files",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "empty directory",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "environment variable should not be set",
                "arguments": []
            },
            {
                "type": "UNKNOWN",
                "name": "split extension",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "append to environment variable",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "grep file",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "create file",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "count items in directory",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get modified time",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "directory should be empty",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "file should be empty",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "move file",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "touch",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "count directories in directory",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "file should not exist",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "create binary file",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "should exist",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "join paths",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "copy files",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "split path",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "file should exist",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "remove environment variable",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "append to file",
                "arguments": []
            },
            {
                "type": "LOG",
                "name": "log environment variables",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "move directory",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get binary file",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "normalize path",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "move files",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get environment variable",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "copy file",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get file",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "get file size",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "directory should exist",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "set modified time",
                "arguments": []
            },
            {
                "type": "LOG",
                "name": "log file",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "copy directory",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "file should not be empty",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "count files in directory",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "remove directory",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "run and return rc and output",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "remove file",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "list directories in directory",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "list directory",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "should not exist",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "environment variable should be set",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "directory should not exist",
                "arguments": []
            },
            {
                "type": "GET",
                "name": "list files in directory",
                "arguments": []
            },
            {
                "type": "SET",
                "name": "join path",
                "arguments": []
            },
            {
                "type": "ASSERTION",
                "name": "directory should not be empty",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "create directory",
                "arguments": []
            },
            {
                "type": "ACTION",
                "name": "run",
                "arguments": []
            }
        ]
    }
]